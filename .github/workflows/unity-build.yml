on:
  workflow_call:
    inputs:
      unity_version:
        description: "Unity version to use"
        required: true
        type: string

      artifact_name:
        description: "Name of the artifact containing the Unity build"
        required: true
        type: string

      runner_image:
        description: "Runner image to use"
        required: true
        type: string

      target_platform:
        description: "Target platform to build"
        required: true
        type: string

      output_path:
        description: "The expected output path"
        required: true
        type: string

    secrets:
      UNITY_LICENSE:
        description: "Unity license of the account to use"
        required: true

      UNITY_EMAIL:
        description: "Unity email of the account to use"
        required: true

      UNITY_PASSWORD:
        description: "Unity password of the account to use"
        required: true

jobs:
  unity-build:
    name: Build ${{ inputs.target_platform }} with Unity
    runs-on: ${{ inputs.runner_image }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: ./SampleProject~/Library/
          key: Library-${{ inputs.target_platform }}-${{ inputs.unity_version }}

      - name: Build Unity Project
        uses: game-ci/unity-builder@v4.3.0
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ./SampleProject~/
          targetPlatform: ${{ inputs.target_platform }}
          unityVersion: ${{ inputs.unity_version }}
          versioning: None
          runAsHostUser: true

      - name: List contents of SampleProject (if exists)
        shell: bash
        run: |
          if [ -d "build" ]; then
            ls -la build
          else
            echo "Directory 'SampleProject' does not exist."
          fi

      - name: Setup fastlane files (macOS/Linux)
        shell: bash
        run: |
          if [ ! -d "${{ inputs.output_path }}" ]; then
            echo "Error: Destination directory ${{ inputs.output_path }} does not exist!" >&2
            exit 1
          fi
  
          if [ -d "${{ inputs.output_path }}/fastlane" ]; then
            echo "Error: fastlane directory already exists in ${{ inputs.output_path }}!" >&2
            exit 1
          fi
            
          cp -r ./.github/${{ inputs.target_platform }}/fastlane ${{ inputs.output_path }}/fastlane

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: "${{ inputs.target_platform }}_${{ inputs.unity_version }}_BuildOutput"
          path: "${{ inputs.output_path }}"
